{"componentChunkName":"component---src-templates-blog-post-js","path":"/strict-mode-in-javascript/","result":{"data":{"site":{"siteMetadata":{"title":"Trainto.log()"}},"markdownRemark":{"id":"52be4375-abaf-5e05-beb2-668f6fc81192","excerpt":"In strict mode, javascript behaves more safely and logically, and it will gives you more warnings. To enable strict mode, you can just put the below code. If…","html":"<p>In strict mode, javascript behaves more safely and logically, and it will gives you more warnings.</p>\n<p>To enable strict mode, you can just put the below code.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// To apply strict mode to each function,</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If the engine of javascript does not support ECMAScript 5, then it will be treated as just string.</p>\n<br>\n<h3>Variable must be declared</h3>\n<p>In strict mode, every variable must be declared explicitly. If you try to assign value to variable which is not declared, an exception(ReferenceError) will be given.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n  value <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError: value is not defined</span></code></pre></div>\n<br>\n<h3>Function can not be declared in blocks</h3>\n<p>Function must be declared in global scope or in another function, not in blocks.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>    <span class=\"token comment\">// SyntaxError</span>\n            <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n            <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<p>For workaround, function can be declared in blocks like this,</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">bar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3>Arguments</h3>\n<p>The properties arguments.callee and arguments.caller have been eliminated. And also ‘arguments’ can not be used for variable name(SyntaxError will be given).</p>\n<br>\n<h3>this</h3>\n<p>If it’s not in strict mode, ‘this’ in function(not method) will be global object(like ‘window’ in browser). However in strict mode ‘this’ is undefined.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3>Etc.</h3>\n<ul>\n<li>No more ‘with’: ‘with’ statement cannot be used anymore.</li>\n<li>No more octal numbers: SyntaxError will be given for octal literal.</li>\n</ul>\n<br>\n<p>For more detail, <a href=\"http://dmitrysoshnikov.com/ecmascript/es5-chapter-2-strict-mode/\">ECMA-262-5 in detail. Chapter 2. Strict Mode</a> is worth to read.</p>","frontmatter":{"title":"Strict mode in Javascript","date":"March 24, 2016","description":null}}},"pageContext":{"slug":"/strict-mode-in-javascript/","previous":{"fields":{"slug":"/shell-expansion/"},"frontmatter":{"title":"Shell expansion"}},"next":{"fields":{"slug":"/vim-8/"},"frontmatter":{"title":"Vim 8"}}}},"staticQueryHashes":["426816048","63159454"]}